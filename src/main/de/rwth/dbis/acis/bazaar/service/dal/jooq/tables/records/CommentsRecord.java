/**
 * This class is generated by jOOQ
 */
package de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.records;


import de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.Comments;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentsRecord extends UpdatableRecordImpl<CommentsRecord> implements Record6<Integer, String, Timestamp, Timestamp, Integer, Integer> {

	private static final long serialVersionUID = -1426623784;

	/**
	 * Setter for <code>reqbaz.comments.Id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>reqbaz.comments.Id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>reqbaz.comments.message</code>.
	 */
	public void setMessage(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>reqbaz.comments.message</code>.
	 */
	public String getMessage() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>reqbaz.comments.creation_time</code>.
	 */
	public void setCreationTime(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>reqbaz.comments.creation_time</code>.
	 */
	public Timestamp getCreationTime() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>reqbaz.comments.lastupdated_time</code>.
	 */
	public void setLastupdatedTime(Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>reqbaz.comments.lastupdated_time</code>.
	 */
	public Timestamp getLastupdatedTime() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>reqbaz.comments.Requirement_Id</code>.
	 */
	public void setRequirementId(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>reqbaz.comments.Requirement_Id</code>.
	 */
	public Integer getRequirementId() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>reqbaz.comments.User_Id</code>.
	 */
	public void setUserId(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>reqbaz.comments.User_Id</code>.
	 */
	public Integer getUserId() {
		return (Integer) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, Timestamp, Timestamp, Integer, Integer> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, Timestamp, Timestamp, Integer, Integer> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Comments.COMMENTS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Comments.COMMENTS.MESSAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Comments.COMMENTS.CREATION_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return Comments.COMMENTS.LASTUPDATED_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Comments.COMMENTS.REQUIREMENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Comments.COMMENTS.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getMessage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getCreationTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getLastupdatedTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getRequirementId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentsRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentsRecord value2(String value) {
		setMessage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentsRecord value3(Timestamp value) {
		setCreationTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentsRecord value4(Timestamp value) {
		setLastupdatedTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentsRecord value5(Integer value) {
		setRequirementId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentsRecord value6(Integer value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentsRecord values(Integer value1, String value2, Timestamp value3, Timestamp value4, Integer value5, Integer value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CommentsRecord
	 */
	public CommentsRecord() {
		super(Comments.COMMENTS);
	}

	/**
	 * Create a detached, initialised CommentsRecord
	 */
	public CommentsRecord(Integer id, String message, Timestamp creationTime, Timestamp lastupdatedTime, Integer requirementId, Integer userId) {
		super(Comments.COMMENTS);

		setValue(0, id);
		setValue(1, message);
		setValue(2, creationTime);
		setValue(3, lastupdatedTime);
		setValue(4, requirementId);
		setValue(5, userId);
	}
}
