/**
 * This class is generated by jOOQ
 */
package de.rwth.dbis.acis.bazaar.service.dal.jooq.tables;


import de.rwth.dbis.acis.bazaar.service.dal.jooq.Keys;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.Reqbaz;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.records.VotesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Votes extends TableImpl<VotesRecord> {

	private static final long serialVersionUID = -1061380689;

	/**
	 * The reference instance of <code>reqbaz.votes</code>
	 */
	public static final Votes VOTES = new Votes();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VotesRecord> getRecordType() {
		return VotesRecord.class;
	}

	/**
	 * The column <code>reqbaz.votes.Id</code>.
	 */
	public final TableField<VotesRecord, Integer> ID = createField("Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.votes.is_upvote</code>.
	 */
	public final TableField<VotesRecord, Byte> IS_UPVOTE = createField("is_upvote", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.votes.Requirement_Id</code>.
	 */
	public final TableField<VotesRecord, Integer> REQUIREMENT_ID = createField("Requirement_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.votes.User_Id</code>.
	 */
	public final TableField<VotesRecord, Integer> USER_ID = createField("User_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.votes.creation_time</code>.
	 */
	public final TableField<VotesRecord, Timestamp> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>reqbaz.votes</code> table reference
	 */
	public Votes() {
		this("votes", null);
	}

	/**
	 * Create an aliased <code>reqbaz.votes</code> table reference
	 */
	public Votes(String alias) {
		this(alias, VOTES);
	}

	private Votes(String alias, Table<VotesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Votes(String alias, Table<VotesRecord> aliased, Field<?>[] parameters) {
		super(alias, Reqbaz.REQBAZ, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<VotesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_VOTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<VotesRecord> getPrimaryKey() {
		return Keys.KEY_VOTES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<VotesRecord>> getKeys() {
		return Arrays.<UniqueKey<VotesRecord>>asList(Keys.KEY_VOTES_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<VotesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<VotesRecord, ?>>asList(Keys.VOTES_REQUIREMENT, Keys.VOTES_USER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Votes as(String alias) {
		return new Votes(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Votes rename(String name) {
		return new Votes(name, null);
	}
}
