/**
 * This class is generated by jOOQ
 */
package de.rwth.dbis.acis.bazaar.service.dal.jooq.tables;


import de.rwth.dbis.acis.bazaar.service.dal.jooq.Keys;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.Reqbaz;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.records.UserRoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRole extends TableImpl<UserRoleRecord> {

	private static final long serialVersionUID = 875892109;

	/**
	 * The reference instance of <code>reqbaz.user_role</code>
	 */
	public static final UserRole USER_ROLE = new UserRole();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserRoleRecord> getRecordType() {
		return UserRoleRecord.class;
	}

	/**
	 * The column <code>reqbaz.user_role.Id</code>.
	 */
	public final TableField<UserRoleRecord, Integer> ID = createField("Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.user_role.Roles_Id</code>.
	 */
	public final TableField<UserRoleRecord, Integer> ROLES_ID = createField("Roles_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.user_role.Users_Id</code>.
	 */
	public final TableField<UserRoleRecord, Integer> USERS_ID = createField("Users_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.user_role.context_info</code>.
	 */
	public final TableField<UserRoleRecord, String> CONTEXT_INFO = createField("context_info", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>reqbaz.user_role</code> table reference
	 */
	public UserRole() {
		this("user_role", null);
	}

	/**
	 * Create an aliased <code>reqbaz.user_role</code> table reference
	 */
	public UserRole(String alias) {
		this(alias, USER_ROLE);
	}

	private UserRole(String alias, Table<UserRoleRecord> aliased) {
		this(alias, aliased, null);
	}

	private UserRole(String alias, Table<UserRoleRecord> aliased, Field<?>[] parameters) {
		super(alias, Reqbaz.REQBAZ, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UserRoleRecord, Integer> getIdentity() {
		return Keys.IDENTITY_USER_ROLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserRoleRecord> getPrimaryKey() {
		return Keys.KEY_USER_ROLE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserRoleRecord>> getKeys() {
		return Arrays.<UniqueKey<UserRoleRecord>>asList(Keys.KEY_USER_ROLE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<UserRoleRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<UserRoleRecord, ?>>asList(Keys.USER_ROLE_ROLES, Keys.USER_ROLE_USERS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRole as(String alias) {
		return new UserRole(alias, this);
	}

	/**
	 * Rename this table
	 */
	public UserRole rename(String name) {
		return new UserRole(name, null);
	}
}
