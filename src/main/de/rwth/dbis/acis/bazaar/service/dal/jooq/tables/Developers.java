/**
 * This class is generated by jOOQ
 */
package de.rwth.dbis.acis.bazaar.service.dal.jooq.tables;


import de.rwth.dbis.acis.bazaar.service.dal.jooq.Keys;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.Reqbaz;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.records.DevelopersRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Developers extends TableImpl<DevelopersRecord> {

	private static final long serialVersionUID = -2102930452;

	/**
	 * The reference instance of <code>reqbaz.developers</code>
	 */
	public static final Developers DEVELOPERS = new Developers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DevelopersRecord> getRecordType() {
		return DevelopersRecord.class;
	}

	/**
	 * The column <code>reqbaz.developers.Id</code>.
	 */
	public final TableField<DevelopersRecord, Integer> ID = createField("Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.developers.Requirement_Id</code>.
	 */
	public final TableField<DevelopersRecord, Integer> REQUIREMENT_ID = createField("Requirement_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.developers.User_Id</code>.
	 */
	public final TableField<DevelopersRecord, Integer> USER_ID = createField("User_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.developers.creation_time</code>.
	 */
	public final TableField<DevelopersRecord, Timestamp> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>reqbaz.developers</code> table reference
	 */
	public Developers() {
		this("developers", null);
	}

	/**
	 * Create an aliased <code>reqbaz.developers</code> table reference
	 */
	public Developers(String alias) {
		this(alias, DEVELOPERS);
	}

	private Developers(String alias, Table<DevelopersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Developers(String alias, Table<DevelopersRecord> aliased, Field<?>[] parameters) {
		super(alias, Reqbaz.REQBAZ, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<DevelopersRecord, Integer> getIdentity() {
		return Keys.IDENTITY_DEVELOPERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DevelopersRecord> getPrimaryKey() {
		return Keys.KEY_DEVELOPERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DevelopersRecord>> getKeys() {
		return Arrays.<UniqueKey<DevelopersRecord>>asList(Keys.KEY_DEVELOPERS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<DevelopersRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<DevelopersRecord, ?>>asList(Keys.DEVELOPER_REQUIREMENT, Keys.DEVELOPER_USER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Developers as(String alias) {
		return new Developers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Developers rename(String name) {
		return new Developers(name, null);
	}
}
