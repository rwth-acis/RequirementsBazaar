/**
 * This class is generated by jOOQ
 */
package de.rwth.dbis.acis.bazaar.service.dal.jooq.tables;


import de.rwth.dbis.acis.bazaar.service.dal.jooq.Keys;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.Reqbaz;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.records.RolePrivilegeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolePrivilege extends TableImpl<RolePrivilegeRecord> {

	private static final long serialVersionUID = 2082614642;

	/**
	 * The reference instance of <code>reqbaz.role_privilege</code>
	 */
	public static final RolePrivilege ROLE_PRIVILEGE = new RolePrivilege();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RolePrivilegeRecord> getRecordType() {
		return RolePrivilegeRecord.class;
	}

	/**
	 * The column <code>reqbaz.role_privilege.Id</code>.
	 */
	public final TableField<RolePrivilegeRecord, Integer> ID = createField("Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.role_privilege.Roles_Id</code>.
	 */
	public final TableField<RolePrivilegeRecord, Integer> ROLES_ID = createField("Roles_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>reqbaz.role_privilege.Privileges_Id</code>.
	 */
	public final TableField<RolePrivilegeRecord, Integer> PRIVILEGES_ID = createField("Privileges_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>reqbaz.role_privilege</code> table reference
	 */
	public RolePrivilege() {
		this("role_privilege", null);
	}

	/**
	 * Create an aliased <code>reqbaz.role_privilege</code> table reference
	 */
	public RolePrivilege(String alias) {
		this(alias, ROLE_PRIVILEGE);
	}

	private RolePrivilege(String alias, Table<RolePrivilegeRecord> aliased) {
		this(alias, aliased, null);
	}

	private RolePrivilege(String alias, Table<RolePrivilegeRecord> aliased, Field<?>[] parameters) {
		super(alias, Reqbaz.REQBAZ, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<RolePrivilegeRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ROLE_PRIVILEGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RolePrivilegeRecord> getPrimaryKey() {
		return Keys.KEY_ROLE_PRIVILEGE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RolePrivilegeRecord>> getKeys() {
		return Arrays.<UniqueKey<RolePrivilegeRecord>>asList(Keys.KEY_ROLE_PRIVILEGE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<RolePrivilegeRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<RolePrivilegeRecord, ?>>asList(Keys.ROLE_PRIVILEGE_ROLES, Keys.ROLE_PRIVILEGE_PRIVILEGES);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RolePrivilege as(String alias) {
		return new RolePrivilege(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RolePrivilege rename(String name) {
		return new RolePrivilege(name, null);
	}
}
